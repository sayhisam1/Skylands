{
	// Place your Skylands workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Require Services": {
		"scope": "lua",
		"prefix": "srv",
		"body": [
			"local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")",
			"local Services = require(ReplicatedStorage.Services)",
			"$1"
		],
		"description": "Require services"
	},
	"New services": {
		"scope": "lua",
		"prefix": "newsrv",
		"body": [
			"local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")",
			"local Service = require(ReplicatedStorage.Objects.Shared.Services.ServiceObject).new(script.Name)",
			"local DEPENDENCIES = {}",
			"Service:AddDependencies(DEPENDENCIES)",
			"$1"
		],
		"description": "New service template"
	},
	"New binder": {
		"scope": "lua",
		"prefix": "newbinder",
		"body": [
			"local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")",
			"local Enums = require(ReplicatedStorage.Enums)",
			"local Binder = require(ReplicatedStorage.Objects.Shared.Binder)",
			"",
			"local ${1:obj} = require(script.${1:obj})",
			"local ${1:obj}Binder = Binder.new(Enums.Tags.${1:obj}, ${1:obj})",
			"$2",
		],
		"description": "New binder template"
	}
}